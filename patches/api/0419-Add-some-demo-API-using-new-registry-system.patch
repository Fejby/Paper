From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Sat, 25 Feb 2023 21:26:44 -0800
Subject: [PATCH] Add some demo API using new registry system


diff --git a/src/main/java/io/papermc/paper/chat/ChatType.java b/src/main/java/io/papermc/paper/chat/ChatType.java
new file mode 100644
index 0000000000000000000000000000000000000000..574dbfc883f503d76c2bdf61a87304839263e132
--- /dev/null
+++ b/src/main/java/io/papermc/paper/chat/ChatType.java
@@ -0,0 +1,21 @@
+package io.papermc.paper.chat;
+
+import io.papermc.paper.registry.RegistryBuilder;
+import org.bukkit.Keyed;
+import org.jetbrains.annotations.ApiStatus;
+import org.jetbrains.annotations.NotNull;
+
+@ApiStatus.NonExtendable
+@ApiStatus.Experimental
+public interface ChatType extends net.kyori.adventure.chat.ChatType, Keyed {
+
+    @NotNull String textTranslationKey();
+
+    @ApiStatus.NonExtendable
+    @ApiStatus.Experimental
+    interface Builder extends RegistryBuilder<ChatType>, ChatType {
+
+        @NotNull Builder textTranslationKey(@NotNull String key);
+    }
+
+}
diff --git a/src/main/java/io/papermc/paper/registry/RegistryKey.java b/src/main/java/io/papermc/paper/registry/RegistryKey.java
index 1b4bb4fe106bc020fb78ad1f8a2ea1b35e2ee4f1..3e2232be284d01ed919d595d31172a650a5f4f44 100644
--- a/src/main/java/io/papermc/paper/registry/RegistryKey.java
+++ b/src/main/java/io/papermc/paper/registry/RegistryKey.java
@@ -1,6 +1,7 @@
 package io.papermc.paper.registry;
 
 import com.google.common.collect.Sets;
+import io.papermc.paper.chat.ChatType;
 import java.util.Set;
 import net.kyori.adventure.key.Keyed;
 import org.bukkit.GameEvent;
@@ -18,11 +19,13 @@ public final class RegistryKey<T extends Keyed> {
     /***********************
      * Built-in registries *
      ***********************/
+    public static final RegistryKey<GameEvent> GAME_EVENT = create("game_event", GameEvent.class);
     public static final RegistryKey<StructureType> STRUCTURE_TYPE = create("worldgen/structure_type", StructureType.class);
 
     /**************************
      * Data-driven registries *
      **************************/
+    public static final RegistryKey<ChatType> CHAT_TYPE = create("chat_type", ChatType.class);
     public static final RegistryKey<Structure> STRUCTURE = create("worldgen/structure", Structure.class);
 
     private final NamespacedKey key;
diff --git a/src/main/java/org/bukkit/GameEvent.java b/src/main/java/org/bukkit/GameEvent.java
index 4808824a55628d1e2344981d40d3665d572117e0..6ecd162c6f797be124ff1ce5af16d9903283facb 100644
--- a/src/main/java/org/bukkit/GameEvent.java
+++ b/src/main/java/org/bukkit/GameEvent.java
@@ -10,7 +10,8 @@ import org.jetbrains.annotations.Nullable;
 /**
  * Represents a generic Mojang game event.
  */
-public final class GameEvent implements Keyed {
+@org.jetbrains.annotations.ApiStatus.NonExtendable // Paper
+public class GameEvent implements Keyed { // Paper
 
     private static final Map<NamespacedKey, GameEvent> GAME_EVENTS = new HashMap<>();
     //
@@ -93,7 +94,8 @@ public final class GameEvent implements Keyed {
     //
     private final NamespacedKey key;
 
-    private GameEvent(NamespacedKey key) {
+    @org.jetbrains.annotations.ApiStatus.Internal // Paper
+    protected GameEvent(NamespacedKey key) { // Paper
         this.key = key;
 
         GAME_EVENTS.put(key, this);
@@ -129,4 +131,13 @@ public final class GameEvent implements Keyed {
     private static GameEvent getEvent(String vanilla) {
         return new GameEvent(NamespacedKey.minecraft(vanilla));
     }
+    // Paper start
+    @org.jetbrains.annotations.ApiStatus.Experimental
+    @org.jetbrains.annotations.ApiStatus.NonExtendable
+    public interface Builder extends io.papermc.paper.registry.RegistryBuilder<GameEvent> {
+        int range();
+
+        @NotNull Builder range(int range);
+    }
+    // Paper end
 }
diff --git a/src/main/java/org/bukkit/Registry.java b/src/main/java/org/bukkit/Registry.java
index 278a643a80207a27f4dd011da8f6d3b675535914..088ffe1923d768181581bb5678573e78af75f6d7 100644
--- a/src/main/java/org/bukkit/Registry.java
+++ b/src/main/java/org/bukkit/Registry.java
@@ -199,20 +199,7 @@ public interface Registry<T extends Keyed> extends Iterable<T> {
      *
      * @see GameEvent
      */
-    Registry<GameEvent> GAME_EVENT = new Registry<GameEvent>() {
-
-        @NotNull
-        @Override
-        public Iterator iterator() {
-            return GameEvent.values().iterator();
-        }
-
-        @Nullable
-        @Override
-        public GameEvent get(@NotNull NamespacedKey key) {
-            return GameEvent.getByKey(key);
-        }
-    };
+    Registry<GameEvent> GAME_EVENT = io.papermc.paper.registry.RegistryAccess.INSTANCE.getRegistry(io.papermc.paper.registry.RegistryKey.GAME_EVENT); // Paper
     // Paper start
     /**
      * Configured structures.
